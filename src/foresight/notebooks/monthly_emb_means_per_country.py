# -*- coding: utf-8 -*-
"""monthly_emb_means_per_country.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1g3csNCwyUVCfeYwYAC9_VGo5WJ_kJCNW
"""

gcp_project = 'foresight-375620'
gcp_bucket = 'frsght'

import google.auth
from google.colab import auth

# authenticate with gcp
auth.authenticate_user()
credentials, project_id = google.auth.default()

!gcloud config set project $gcp_project
!echo "deb http://packages.cloud.google.com/apt gcsfuse-bionic main" > /etc/apt/sources.list.d/gcsfuse.list
!curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
!apt -qq update
!apt -qq install gcsfuse

# create colab instance directory
!mkdir -p $gcp_bucket
# mount gcp bucket to colab instance directory.
# at /content/gcp_bucket
!gcsfuse  --implicit-dirs --limit-bytes-per-sec -1 --limit-ops-per-sec -1 $gcp_bucket $gcp_bucket

!pip install gcsfs

import logging

from dask.distributed import Client
client = Client(n_workers=4, threads_per_worker=2, processes=True,
                memory_limit='4GB', silence_logs=logging.ERROR)

client

from dask.diagnostics import ProgressBar
pbar = ProgressBar()
pbar.register()

import dask.dataframe as dd

emb_cols = [f"docembed-{n}" for n in range(512)]

country_cols = [f"country-{n}" for n in range(1, 4)]

ddf = dd.read_parquet('gcs://frsght/datasets_sample_b988c8_694a90_1f5902/gdelt/', columns=['date', 'yearmonth'] + emb_cols + country_cols,
                      split_row_groups=True, infer_divisions=True, engine='pyarrow')

ddf

# Commented out IPython magic to ensure Python compatibility.
# %%time
# ddf['date'] = ddf['date'].dt.tz_localize(None)

# Commented out IPython magic to ensure Python compatibility.
# %%time
# ddf['window'] = ddf['date'].dt.to_period('M')

import numpy as np
countries_seen = np.load('/content/frsght/countries_seen.npy', allow_pickle=True)

# Commented out IPython magic to ensure Python compatibility.
# %%time
# import warnings
# 
# import pandas as pd
# 
# with warnings.catch_warnings():
#     warnings.simplefilter("ignore")
#     for country in countries_seen:
#         print(country)
#         rows = list()
#         for n in range(1, 4):
#             country_records = ddf[ddf[f"country-{n}"] == country].compute()
#             rows.append(country_records)
#         cdf = pd.concat(rows, ignore_index=True)
#         cmeans = cdf.groupby('window').mean()[emb_cols].apply(np.array, axis=1)
#         print(cmeans.shape)
#         pd.DataFrame({'embeddings_means': cmeans}).reset_index().to_parquet(f"/content/frsght/monthly_emb_means/{country}_monthly_embedding_means.parquet")

